#!/bin/bash

set -e

source <(otc-task-include lib/filesystem.sh)
source <(otc-task-include lib/vsts.sh)
source <(otc-task-include lib/dotnet.sh)
source <(otc-task-include lib/docker.sh)
source <(otc-task-include lib/helm.sh)
source <(otc-task-include lib/deploy.sh)
source <(otc-task-include lib/git.sh)

ORGANIZATION="oleconsignado"

PUBLISH_DEPLOY_LINK_PR_FEED_MISS_ENV_VARS=9
PUBLISH_DEPLOY_LINK_PR_FEED_MISS_NAMESPACE=10
PUBLISH_DEPLOY_LINK_PR_FEED_MISS_RELEASE_NAME=11
PUBLISH_DEPLOY_LINK_PR_FEED_MISS_COMMIT_ID=12
PUBLISH_DEPLOY_LINK_PR_FEED_MISS_PR_ID=13

# Param pullrequest_id
# Param commit_id
# Param namespace
# Param release_name
# Required environment variables:
#   - SYSTEM_PULLREQUEST_SOURCEREPOSITORYURI
function publish_deploy_link_on_pr_feed
{
	local pullrequest_id=$1
	local commit_id=$2
	local namespace=$3
	local release_name=$4

	if [ -z "$pullrequest_id" ]
	then
		echo "publish_deploy_link_on_pr_feed: Missing pullrequest_id" >&2
		return $PUBLISH_DEPLOY_LINK_PR_FEED_MISS_PR_ID
	fi

	if [ -z "$commit_id" ]
	then
		echo "publish_deploy_link_on_pr_feed: Missing commit_id" >&2
		return $PUBLISH_DEPLOY_LINK_PR_FEED_MISS_COMMIT_ID
	fi

	if [ -z "$namespace" ]
	then
		echo "publish_deploy_link_on_pr_feed: Missing namespace" >&2
		return $PUBLISH_DEPLOY_LINK_PR_FEED_MISS_NAMESPACE
	fi

	if [ -z "$release_name" ]
	then
		echo "publish_deploy_link_on_pr_feed: Missing release_name" >&2
		return $PUBLISH_DEPLOY_LINK_PR_FEED_MISS_RELEASE_NAME
	fi


	if [ -z "$SYSTEM_PULLREQUEST_SOURCEREPOSITORYURI" ]
	then
		echo "publish_deploy_link_on_pr_feed: Missing required environment variables, see publish_deploy_link_on_pr_feed." >&2
		return $PUBLISH_DEPLOY_LINK_PR_FEED_MISS_ENV_VARS
	fi

	local commit_short=$(echo $commit_id | egrep -o '^[0-9a-f]{8}')
	local preview_url="http://$(kubectl -n $namespace get ingress -l release=$release_name -ojson | \
		jq -r '.items[].spec.rules[].host')/"

	local comment_text="Foi publicado uma prévia da aplicação no endereço [$preview_url]($preview_url). \
A versão publicada corresponde ao commit \
[$commit_short]($SYSTEM_PULLREQUEST_SOURCEREPOSITORYURI/commit/$commit_id) \
e ela estará disponível enquanto este *Pull Request* estiver aberto."
	local comment_id=$(vsts-comment-pull-request $pullrequest_id "$comment_text")
	vsts-pull-request-comment-change-status $pullrequest_id $comment_id 4 # 4 = closed
}

DEPLOY_MAIN_MISS_NAMESPACE=1
DEPLOY_MAIN_MISS_CONFIGURATION=2
DEPLOY_MAIN_MISS_DEPLOY_FAILED=3
DEPLOY_MAIN_MISS_REQUIRED_ENV_VARS=4
DEPLOY_MAIN_MISS_REQUIRED_PR_ENV_VARS=5

# Param namespace
# Param configuration
# Required environment variables:
#   - BUILD_REASON
#   - BUILD_BUILDID
#   - BUILD_SOURCESDIRECTORY
#   - Required if "$BUILD_REASON" = "PullRequest"
#     - SYSTEM_PULLREQUEST_PULLREQUESTID
#     - SYSTEM_PULLREQUEST_SOURCECOMMITID
function main
{
	local namespace=$1
	local configuration=$2

	if [ -z "$BUILD_REASON" ] || \
		[ -z "$BUILD_BUILDID" ] || \
		[ -z "$BUILD_SOURCESDIRECTORY" ]
	then
		echo "Missing required environment variables, look at script source to see details." >&2
		return $DEPLOY_MAIN_MISS_REQUIRED_ENV_VARS
	fi

	local is_pullrequest=false
	local pullrequest_id=''

	if [ "$BUILD_REASON" = "PullRequest" ]
	then
		if [ -z "$SYSTEM_PULLREQUEST_SOURCECOMMITID" ] || \
			[ -z "$SYSTEM_PULLREQUEST_PULLREQUESTID" ]
		then
			echo "Missing required PR environment variables, look at script source to see details." >&2
			return $DEPLOY_MAIN_MISS_REQUIRED_PR_ENV_VARS
		fi

		is_pullrequest=true
		pullrequest_id=$SYSTEM_PULLREQUEST_PULLREQUESTID
	fi

	if [ -z "$namespace" ]
	then
		echo "Missing namespace" >&2
		return $DEPLOY_MAIN_MISS_NAMESPACE
	fi

	if [ -z "$configuration" ]
	then
		echo "Missing configuration" >&2
		return $DEPLOY_MAIN_MISS_CONFIGURATION
	fi

	local artifact_suffix=''
	local tag=''

	if $is_pullrequest
	then
		artifact_suffix="-eph-pr$pullrequest_id"
		tag="$(echo $SYSTEM_PULLREQUEST_SOURCECOMMITID | \
			egrep -o '^[0-9a-f]{8}')-$BUILD_BUILDID"
	else
		tag="v$BUILD_BUILDID"
		prepare-local-repo-for-changes
	fi

	local solution_dir="$BUILD_SOURCESDIRECTORY/Source"
	local deployed_releases_list=$(mktemp --suffix="dep-rel-$BUILD_BUILDID")

	if deploy "$solution_dir" "$configuration" "$tag" "$namespace" "$artifact_suffix" "$deployed_releases_list"
	then
		if $is_pullrequest
		then
			for release_name in $(cat "$deployed_releases_list")
			do		
				publish_deploy_link_on_pr_feed $pullrequest_id \
					$SYSTEM_PULLREQUEST_SOURCECOMMITID \
					$namespace \
					$release_name
			done

			rm "$deployed_releases_list"
		else
			commit-changes-and-tag "$tag"
		fi
	else
		return $DEPLOY_MAIN_MISS_DEPLOY_FAILED
	fi
}

main $@