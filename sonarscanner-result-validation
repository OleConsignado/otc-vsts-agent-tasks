#!/bin/bash

source <(otc-task-include lib/assert.sh)
source <(otc-task-include lib/vsts.sh)
source <(otc-task-include lib/console.sh)
source <(otc-task-include lib/sonar.sh)
source <(otc-task-include lib/vsts-pr-statuses.sh)

SONARSCANNER_END_OUTPUT_FILE='sonarscanner-end-output'

function main
{
	local pullrequest_id=$SYSTEM_PULLREQUEST_PULLREQUESTID
	assert-not-empty pullrequest_id
	local analysis_report_url_file=$(mktemp -t \
		"pr-sonar-report-url-${pullrequest_id}-XXXXXXXX")
	
	if sonar-analysis-validation $pullrequest_id > $analysis_report_url_file
	then
		pullrequest-set-quality-gate-status \
			"$pullrequest_id" \
			"succeeded" \
			"$(cat $analysis_report_url_file)"

	elif [ "$?" -eq "$SONAR_ANALYSIS_VALIDATION_FAILED" ]
	then
		pullrequest-set-quality-gate-status \
			"$pullrequest_id" \
			"failed" \
			"$(cat $analysis_report_url_file)"
	else
		local error_code=$?
		red "ERROR: Sonar analysis validation returned $error_code" >&2
		return $error_code # will exit with error code
	fi

	rm -f $analysis_report_url_file > /dev/null 2>&1
}

main $@
